<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fujfu.dao.admin.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.fujfu.pojo.admin.RoleVO" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="describ" property="describ" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="INTEGER" />
  </resultMap>
  <!-- 分页查询条件 -->
  <sql id="queryCondition">
  	<trim prefix="where" prefixOverrides="and|or">
  		<if test="role.rolename!=null and role.rolename!=''">
			and rolename like "%"#{role.rolename}"%"  
		</if>
  	</trim>
  </sql>
  <select id="findRole" resultMap="BaseResultMap">
  	select * from fu_role  
  	<include refid="queryCondition" />  
  	order by created desc limit #{page.startOfPage},#{page.pageSize}
  </select>
  <!-- 分页查询记录数 -->
  <select id="countRole" resultType="java.lang.Integer">
  	select count(*) from fu_role 
  	<include refid="queryCondition" />
  </select>
  <!-- 查询所有角色 -->
  <select id="listAllRole" resultMap="BaseResultMap">
  	select * from fu_role  
  </select>
  <!-- 根据管理员id查询出该管理员未拥有的角色 -->
  <select id="findNotOwnRoleByAdminId" resultMap="BaseResultMap">
  	select * from fu_role where role_id not in (
select role_id from fu_role_admin where admin_id = #{adminId})
  </select>
  <sql id="Base_Column_List" >
    role_id, rolename, describ, created
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fu_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fu_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fujfu.pojo.admin.RoleVO" >
    insert into fu_role (role_id, rolename, describ, 
      created)
    values (#{roleId,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{describ,jdbcType=VARCHAR}, 
      #{created,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fujfu.pojo.admin.RoleVO" >
    insert into fu_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="describ != null" >
        describ,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="describ != null" >
        #{describ,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fujfu.pojo.admin.RoleVO" >
    update fu_role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="describ != null" >
        describ = #{describ,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fujfu.pojo.admin.RoleVO" >
    update fu_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      describ = #{describ,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>