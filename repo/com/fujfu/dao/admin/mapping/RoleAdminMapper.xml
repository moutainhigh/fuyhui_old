<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fujfu.dao.admin.RoleAdminMapper" >
  <resultMap id="BaseResultMap" type="com.fujfu.pojo.admin.RoleAdminVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseResultMapVo" type="com.fujfu.pojo.admin.RoleAdminPOJO" >
    <id column="id" property="id" />
    <result column="role_id" property="roleId" />
    <result column="admin_id" property="adminId" />
    <result column="created" property="created" />
    <result column="roleName" property="roleName" />
    <result column="describ" property="describ" />
    <result column="username" property="username" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, admin_id, created
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fu_role_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fu_role_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fujfu.pojo.admin.RoleAdminVO" >
    insert into fu_role_admin (id, role_id, admin_id, 
      created)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, 
      #{created,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fujfu.pojo.admin.RoleAdminVO" >
    insert into fu_role_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="created != null" >
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fujfu.pojo.admin.RoleAdminVO" >
    update fu_role_admin
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="adminId != null" >
        admin_id = #{adminId,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fujfu.pojo.admin.RoleAdminVO" >
    update fu_role_admin
    set role_id = #{roleId,jdbcType=INTEGER},
      admin_id = #{adminId,jdbcType=INTEGER},
      created = #{created,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findRoleByAdminId" resultMap="BaseResultMapVo">
  	select id,fra.role_id as role_id,fra.created as created,rolename,describ,username,realname
	from fu_role_admin fra 
  	inner join fu_role fr on fra.role_id = fr.role_id 
  	inner join fu_admin fa on fra.admin_id = fa.admin_id 
  	where  fra.admin_id = #{adminId} 
  	LIMIT #{page.startOfPage},#{page.pageSize}
  </select>
  
  <select id="countRoleByAdminId" resultType="java.lang.Integer">
  	select count(*) from fu_role_admin fra 
  	inner join fu_role fr on fra.role_id = fr.role_id 
  	inner join fu_admin fa on fra.admin_id = fa.admin_id 
  	where  fra.admin_id = #{adminId}
  </select>
  
  <!-- 根据id查出对应的管理员角色 -->
  <select id="findRoleAdminVoById" resultMap="BaseResultMapVo">
  	select * from fu_role_admin fra 
  	inner join fu_role fr on fra.role_id = fr.role_id 
  	inner join fu_admin fa on fra.admin_id = fa.admin_id 
  	where  fra.id = #{id} 
  </select>
</mapper>