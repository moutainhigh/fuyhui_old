<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fujfu.dao.award.UsersAwardAccountLogMapper" >
  <resultMap id="BaseResultMap" type="com.fujfu.pojo.award.UsersAwardAccountLogVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="vocher_id" property="vocherId" jdbcType="VARCHAR" />
    <result column="loan_id" property="loanId" jdbcType="INTEGER" />
    <result column="loan_name" property="loanName" jdbcType="VARCHAR" />
    <result column="theme_id" property="themeId" jdbcType="INTEGER" />
    <result column="theme" property="theme" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="init_amount" property="initAmount" jdbcType="DECIMAL" />
    <result column="remain_amount" property="remainAmount" jdbcType="DECIMAL" />
    <result column="tran_amount" property="tranAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="origin" property="origin" jdbcType="CHAR" />
    <result column="term" property="term" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="INTEGER" />
    <result column="updated" property="updated" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, mobile, username, vocher_id, loan_id, loan_name, theme_id, theme, type, 
    init_amount, remain_amount, tran_amount, status, origin, term, remark, created, updated
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fu_users_award_account_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fu_users_award_account_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fujfu.pojo.award.UsersAwardAccountLogVO" >
    insert into fu_users_award_account_log (id, user_id, mobile, 
      username, vocher_id, loan_id, 
      loan_name, theme_id, theme, 
      type, init_amount, remain_amount, 
      tran_amount, status, origin, 
      term, remark, created, 
      updated)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{vocherId,jdbcType=VARCHAR}, #{loanId,jdbcType=INTEGER}, 
      #{loanName,jdbcType=VARCHAR}, #{themeId,jdbcType=INTEGER}, #{theme,jdbcType=VARCHAR}, 
      #{type,jdbcType=CHAR}, #{initAmount,jdbcType=DECIMAL}, #{remainAmount,jdbcType=DECIMAL}, 
      #{tranAmount,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{origin,jdbcType=CHAR}, 
      #{term,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{created,jdbcType=INTEGER}, 
      #{updated,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fujfu.pojo.award.UsersAwardAccountLogVO" >
    insert into fu_users_award_account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="vocherId != null" >
        vocher_id,
      </if>
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="loanName != null" >
        loan_name,
      </if>
      <if test="themeId != null" >
        theme_id,
      </if>
      <if test="theme != null" >
        theme,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="initAmount != null" >
        init_amount,
      </if>
      <if test="remainAmount != null" >
        remain_amount,
      </if>
      <if test="tranAmount != null" >
        tran_amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="vocherId != null" >
        #{vocherId,jdbcType=VARCHAR},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=INTEGER},
      </if>
      <if test="loanName != null" >
        #{loanName,jdbcType=VARCHAR},
      </if>
      <if test="themeId != null" >
        #{themeId,jdbcType=INTEGER},
      </if>
      <if test="theme != null" >
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="initAmount != null" >
        #{initAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainAmount != null" >
        #{remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="tranAmount != null" >
        #{tranAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=CHAR},
      </if>
      <if test="term != null" >
        #{term,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fujfu.pojo.award.UsersAwardAccountLogVO" >
    update fu_users_award_account_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="vocherId != null" >
        vocher_id = #{vocherId,jdbcType=VARCHAR},
      </if>
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=INTEGER},
      </if>
      <if test="loanName != null" >
        loan_name = #{loanName,jdbcType=VARCHAR},
      </if>
      <if test="themeId != null" >
        theme_id = #{themeId,jdbcType=INTEGER},
      </if>
      <if test="theme != null" >
        theme = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="initAmount != null" >
        init_amount = #{initAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainAmount != null" >
        remain_amount = #{remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="tranAmount != null" >
        tran_amount = #{tranAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="origin != null" >
        origin = #{origin,jdbcType=CHAR},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fujfu.pojo.award.UsersAwardAccountLogVO" >
    update fu_users_award_account_log
    set user_id = #{userId,jdbcType=INTEGER},
      mobile = #{mobile,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      vocher_id = #{vocherId,jdbcType=VARCHAR},
      loan_id = #{loanId,jdbcType=INTEGER},
      loan_name = #{loanName,jdbcType=VARCHAR},
      theme_id = #{themeId,jdbcType=INTEGER},
      theme = #{theme,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      init_amount = #{initAmount,jdbcType=DECIMAL},
      remain_amount = #{remainAmount,jdbcType=DECIMAL},
      tran_amount = #{tranAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=CHAR},
      origin = #{origin,jdbcType=CHAR},
      term = #{term,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      updated = #{updated,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 分页查询条件 -->
  <sql id="queryCondition">
  	<trim prefix="where" prefixOverrides="and|or">
  		<if test="usersAwardAccountLog.mobile!=null and usersAwardAccountLog.mobile!=''">
			and mobile = #{usersAwardAccountLog.mobile} 
		</if>	
  	</trim>
  </sql>  
  
   <!-- 分页查询 -->
   <select id="findAwardAccountLogListByPage" resultMap="BaseResultMap">
  	select  fal.id, fal.user_id, fal.mobile, fu.realname as username, fal.vocher_id, fal.loan_id, fal.loan_name, fal.theme_id, fal.theme, fal.type, 
    fal.init_amount, fal.remain_amount, fal.tran_amount, fal.status, fal.origin, fal.term, fal.remark, fal.created, fal.updated
    
     from fu_users_award_account_log fal left join fu_users fu on fal.user_id = fu.user_id
  	  <include refid="queryCondition" />  
  	order by created desc limit #{page.startOfPage},#{page.pageSize}
  </select>  
  
  <!-- 分页查询记录数 -->
  <select id="findCountAwardLogAccountList" resultType="java.lang.Integer">
  	select count(*) from fu_users_award_account_log
  	<include refid="queryCondition" />  
  </select>   
  
</mapper>